package com.march.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.march.bean.AlbumDetail;
import com.march.bean.BeautyAlbum;
import com.march.bean.VideoFun;
import com.march.bean.DetailCollection;
import com.march.bean.AlbumItemCollection;

import com.march.dao.AlbumDetailDao;
import com.march.dao.BeautyAlbumDao;
import com.march.dao.VideoFunDao;
import com.march.dao.DetailCollectionDao;
import com.march.dao.AlbumItemCollectionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig albumDetailDaoConfig;
    private final DaoConfig beautyAlbumDaoConfig;
    private final DaoConfig videoFunDaoConfig;
    private final DaoConfig detailCollectionDaoConfig;
    private final DaoConfig albumItemCollectionDaoConfig;

    private final AlbumDetailDao albumDetailDao;
    private final BeautyAlbumDao beautyAlbumDao;
    private final VideoFunDao videoFunDao;
    private final DetailCollectionDao detailCollectionDao;
    private final AlbumItemCollectionDao albumItemCollectionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        albumDetailDaoConfig = daoConfigMap.get(AlbumDetailDao.class).clone();
        albumDetailDaoConfig.initIdentityScope(type);

        beautyAlbumDaoConfig = daoConfigMap.get(BeautyAlbumDao.class).clone();
        beautyAlbumDaoConfig.initIdentityScope(type);

        videoFunDaoConfig = daoConfigMap.get(VideoFunDao.class).clone();
        videoFunDaoConfig.initIdentityScope(type);

        detailCollectionDaoConfig = daoConfigMap.get(DetailCollectionDao.class).clone();
        detailCollectionDaoConfig.initIdentityScope(type);

        albumItemCollectionDaoConfig = daoConfigMap.get(AlbumItemCollectionDao.class).clone();
        albumItemCollectionDaoConfig.initIdentityScope(type);

        albumDetailDao = new AlbumDetailDao(albumDetailDaoConfig, this);
        beautyAlbumDao = new BeautyAlbumDao(beautyAlbumDaoConfig, this);
        videoFunDao = new VideoFunDao(videoFunDaoConfig, this);
        detailCollectionDao = new DetailCollectionDao(detailCollectionDaoConfig, this);
        albumItemCollectionDao = new AlbumItemCollectionDao(albumItemCollectionDaoConfig, this);

        registerDao(AlbumDetail.class, albumDetailDao);
        registerDao(BeautyAlbum.class, beautyAlbumDao);
        registerDao(VideoFun.class, videoFunDao);
        registerDao(DetailCollection.class, detailCollectionDao);
        registerDao(AlbumItemCollection.class, albumItemCollectionDao);
    }
    
    public void clear() {
        albumDetailDaoConfig.getIdentityScope().clear();
        beautyAlbumDaoConfig.getIdentityScope().clear();
        videoFunDaoConfig.getIdentityScope().clear();
        detailCollectionDaoConfig.getIdentityScope().clear();
        albumItemCollectionDaoConfig.getIdentityScope().clear();
    }

    public AlbumDetailDao getAlbumDetailDao() {
        return albumDetailDao;
    }

    public BeautyAlbumDao getBeautyAlbumDao() {
        return beautyAlbumDao;
    }

    public VideoFunDao getVideoFunDao() {
        return videoFunDao;
    }

    public DetailCollectionDao getDetailCollectionDao() {
        return detailCollectionDao;
    }

    public AlbumItemCollectionDao getAlbumItemCollectionDao() {
        return albumItemCollectionDao;
    }

}
