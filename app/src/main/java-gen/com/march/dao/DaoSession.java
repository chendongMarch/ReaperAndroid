package com.march.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.march.bean.AlbumDetail;
import com.march.bean.RecommendAlbumItem;
import com.march.bean.WholeAlbumItem;

import com.march.dao.AlbumDetailDao;
import com.march.dao.RecommendAlbumItemDao;
import com.march.dao.WholeAlbumItemDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig albumDetailDaoConfig;
    private final DaoConfig recommendAlbumItemDaoConfig;
    private final DaoConfig wholeAlbumItemDaoConfig;

    private final AlbumDetailDao albumDetailDao;
    private final RecommendAlbumItemDao recommendAlbumItemDao;
    private final WholeAlbumItemDao wholeAlbumItemDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        albumDetailDaoConfig = daoConfigMap.get(AlbumDetailDao.class).clone();
        albumDetailDaoConfig.initIdentityScope(type);

        recommendAlbumItemDaoConfig = daoConfigMap.get(RecommendAlbumItemDao.class).clone();
        recommendAlbumItemDaoConfig.initIdentityScope(type);

        wholeAlbumItemDaoConfig = daoConfigMap.get(WholeAlbumItemDao.class).clone();
        wholeAlbumItemDaoConfig.initIdentityScope(type);

        albumDetailDao = new AlbumDetailDao(albumDetailDaoConfig, this);
        recommendAlbumItemDao = new RecommendAlbumItemDao(recommendAlbumItemDaoConfig, this);
        wholeAlbumItemDao = new WholeAlbumItemDao(wholeAlbumItemDaoConfig, this);

        registerDao(AlbumDetail.class, albumDetailDao);
        registerDao(RecommendAlbumItem.class, recommendAlbumItemDao);
        registerDao(WholeAlbumItem.class, wholeAlbumItemDao);
    }
    
    public void clear() {
        albumDetailDaoConfig.getIdentityScope().clear();
        recommendAlbumItemDaoConfig.getIdentityScope().clear();
        wholeAlbumItemDaoConfig.getIdentityScope().clear();
    }

    public AlbumDetailDao getAlbumDetailDao() {
        return albumDetailDao;
    }

    public RecommendAlbumItemDao getRecommendAlbumItemDao() {
        return recommendAlbumItemDao;
    }

    public WholeAlbumItemDao getWholeAlbumItemDao() {
        return wholeAlbumItemDao;
    }

}
