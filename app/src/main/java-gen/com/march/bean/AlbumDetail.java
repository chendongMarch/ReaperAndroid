package com.march.bean;

import com.march.dao.DaoSession;

import de.greenrobot.dao.DaoException;

import com.march.dao.AlbumDetailDao;
import com.march.quickrvlibs.inter.RvQuickInterface;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table "ALBUM_DETAIL".
 */
public class AlbumDetail implements RvQuickInterface,java.io.Serializable{

    public static final int TYPE_SHU = 0;
    public static final int TYPE_HENG = 1;
    private String album_link;
    private String photo_src;
    private Integer width;
    private Integer height;
    private String time_stamp;
    private Boolean isFavorite;

    /**
     * Used to resolve relations
     */
    private transient DaoSession daoSession;

    /**
     * Used for active entity operations.
     */
    private transient AlbumDetailDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public AlbumDetail() {
    }

    public AlbumDetail(String album_link, String photo_src, Integer width, Integer height, String time_stamp, Boolean isFavorite) {
        this.album_link = album_link;
        this.photo_src = photo_src;
        this.width = width;
        this.height = height;
        this.time_stamp = time_stamp;
        this.isFavorite = isFavorite;
    }

    /**
     * called by internal mechanisms, do not call yourself.
     */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getAlbumDetailDao() : null;
    }

    public String getAlbum_link() {
        return album_link;
    }

    public void setAlbum_link(String album_link) {
        this.album_link = album_link;
    }

    public String getPhoto_src() {
        return photo_src;
    }

    public void setPhoto_src(String photo_src) {
        this.photo_src = photo_src;
    }

    public Integer getWidth() {
        return width;
    }

    public void setWidth(Integer width) {
        this.width = width;
    }

    public Integer getHeight() {
        return height;
    }

    public void setHeight(Integer height) {
        this.height = height;
    }

    public String getTime_stamp() {
        return time_stamp;
    }

    public void setTime_stamp(String time_stamp) {
        this.time_stamp = time_stamp;
    }

    public Boolean getIsFavorite() {
        return isFavorite;
    }

    public void setIsFavorite(Boolean isFavorite) {
        this.isFavorite = isFavorite;
    }

    /**
     * Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context.
     */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.delete(this);
    }

    /**
     * Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context.
     */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.update(this);
    }

    /**
     * Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context.
     */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.refresh(this);
    }

    @Override
    public int getRvType() {
        if (height > width)
            return 0;
        else
            return 1;
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
